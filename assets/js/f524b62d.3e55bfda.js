"use strict";(self.webpackChunknew_blog=self.webpackChunknew_blog||[]).push([[1524],{4204:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"configurations/virtual-machines","title":"Virtual Machines","description":"Virtual Machine Configurations","source":"@site/docs/configurations/virtual-machines.md","sourceDirName":"configurations","slug":"/configurations/virtual-machines","permalink":"/configurations/virtual-machines","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"slug":"/configurations/virtual-machines","description":"Virtual Machine Configurations"},"sidebar":"tutorialSidebar","previous":{"title":"Digital Books","permalink":"/configurations/digital-books"},"next":{"title":"Operations Security (OPSEC)","permalink":"/category/operations-security-opsec"}}');var s=n(4848),o=n(8453);const i={sidebar_position:4,slug:"/configurations/virtual-machines",description:"Virtual Machine Configurations"},r="Virtual Machines",l={},c=[{value:"Software",id:"software",level:2},{value:"Capture The Flag",id:"capture-the-flag",level:2},{value:"Breach Data",id:"breach-data",level:2},{value:"Testing Environment",id:"testing-environment",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"virtual-machines",children:"Virtual Machines"})}),"\n",(0,s.jsx)(t.h2,{id:"software",children:"Software"}),"\n",(0,s.jsx)(t.p,{children:"I recently started using QEMU and KVM and it has been great. I usually use the following command (replacing variables based on the situation):"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"// Example install for a 20GB Storage / 2GB RAM / 2vCPU VM:\nvirt-install --virt-type=kvm --name [VM name] --vcpus=2 --memory=2048 --os-variant=[os_variant] --cdrom=/var/lib/libvirt/images/[image].iso --network=default --disk size=20\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Check out my ",(0,s.jsx)(t.a,{href:"https://raw.githubusercontent.com/harisqazi1/cheatsheets/refs/heads/master/kvm",children:"kvm cheatsheet"})," for more information."]}),"\n",(0,s.jsx)(t.h2,{id:"capture-the-flag",children:"Capture The Flag"}),"\n",(0,s.jsxs)(t.p,{children:["I use Kali Linux. Sometimes I install meta-packages (see ",(0,s.jsx)(t.a,{href:"https://www.kali.org/docs/general-use/metapackages/",children:"https://www.kali.org/docs/general-use/metapackages/"}),"), however, usually I just install the applications I need to it. Here is the following script that works for me."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"#/bin/bash\n# Update Repository and upgrade packages\nsudo apt update && sudo apt upgrade -y \n#Download REMnux\ncd ~/Downloads\nwget https://REMnux.org/remnux-cli\nmv remnux-cli remnux\nchmod +x remnux\nsudo mv remnux /usr/local/bin\n# Download other apps as needed\n"})}),"\n",(0,s.jsx)(t.h2,{id:"breach-data",children:"Breach Data"}),"\n",(0,s.jsxs)(t.p,{children:["After some deliberation between different platforms, I settled on ",(0,s.jsx)(t.a,{href:"https://www.kicksecure.com/",children:"https://www.kicksecure.com/"}),". This is a hardened Debian system that uses TOR to route NTP, APT package installs, etc. The following is my configuration (",(0,s.jsx)(t.strong,{children:"not a script"}),"):"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'#Remove apt install being routed through TOR (decreases security, but makes download much faster))\nsudo nano /etc/apt/sources.list.d/debian.list\n#Remove "tor+" before the non-tor links\nsudo apt update && sudo apt upgrade -y #Update & Upgrade\nsudo apt install keepassxc #Password manager \nsudo apt install qbittorrent transmission #Torrent software\n#In qbittorrent enable Anonymous Mode in Settings: \n#https://github.com/qbittorrent/qBittorrent/wiki/Anonymous-Mode\n#Download and setup arkenfox for firefox: https://github.com/arkenfox/user.js/\n#Firefox ------\n#Change default search to DuckDuckGo\n#Change DNS to quad9 in browser\n#--------------\nsudo apt install git wget sqlitebrowser #General Tools\n# Get a new temp email address for creating accounts only meant for the VM\n# Install JDownloader2 to make downloading large files easy\n## Make sure to toggle the clipboard feature off: https://board.jdownloader.org/showthread.php?t=52809\n'})}),"\n",(0,s.jsx)(t.h2,{id:"testing-environment",children:"Testing Environment"}),"\n",(0,s.jsxs)(t.p,{children:["Since I use Pop!_OS (",(0,s.jsx)(t.a,{href:"https://pop.system76.com/",children:"https://pop.system76.com/"}),") daily, I also use it as my testing environment. This allows me to test code or configurations before applying it to my own system. Other than ",(0,s.jsx)(t.code,{children:"sudo apt update && sudo apt upgrade -y"}),", I don't have a specific configuration for it. I download things as needed. One thing to mention here is that ",(0,s.jsx)(t.code,{children:"ntpdate"})," comes clutch when your date/time is not matching the actual date/time. You have to force an NTP update with something like: ",(0,s.jsx)(t.code,{children:"ntpdate pool.ntp.org"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var a=n(6540);const s={},o=a.createContext(s);function i(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);