"use strict";(self.webpackChunknew_blog=self.webpackChunknew_blog||[]).push([[8285],{2744:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"configurations/pc-gaming","title":"PC Gaming","description":"PC Gaming Setup with Linux","source":"@site/docs/configurations/pc-gaming.md","sourceDirName":"configurations","slug":"/configurations/pc-gaming","permalink":"/configurations/pc-gaming","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"slug":"/configurations/pc-gaming","description":"PC Gaming Setup with Linux"},"sidebar":"tutorialSidebar","previous":{"title":"Virtual Machines","permalink":"/configurations/virtual-machines"},"next":{"title":"Backups","permalink":"/configurations/digital-backups"}}');var i=t(4848),s=t(8453);const r={sidebar_position:5,slug:"/configurations/pc-gaming",description:"PC Gaming Setup with Linux"},a="PC Gaming",l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Hardening",id:"hardening",level:2},{value:"Video Game Digital Distribution Platforms",id:"video-game-digital-distribution-platforms",level:2},{value:"Troubleshooting Links",id:"troubleshooting-links",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"pc-gaming",children:"PC Gaming"})}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:['Windows has been going down a platform-decay route for a while. This includes hard-to-opt-out telemetry sent to Microsoft, Windows Recall, bloated operating system (OS), out-of-the-box third-party applications (no, I don\'t want to play Candy Crush), etc. I decided before Windows 11 gets "forced" to the consumers of Windows 10 (October 14, 2025 - ',(0,i.jsx)(n.a,{href:"http://web.archive.org/web/20241128174539/https://www.microsoft.com/en-us/windows/end-of-support?r=1",children:"Source - Microsoft"}),"), I will move to Linux for gaming myself. I did move to Linux temporarily a couple of years ago, but I think the landscape has gotten much better now due to the Steam Deck forcing more and more developers to take Linux seriously. Before jumping into gaming, I was stuck between some options of what OS I should choose for gaming. The choices boiled down to the following:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Bazzite (",(0,i.jsx)(n.a,{href:"https://bazzite.gg/",children:"https://bazzite.gg/"}),") - a more polished gaming OS based on atomic/immutable Fedora. Atomic/Immutable means that it leverages snapshots, so you can roll back to a previous version in case you make a mistake."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Nobara Project (",(0,i.jsx)(n.a,{href:"https://nobaraproject.org/",children:"https://nobaraproject.org/"}),") - Nobara was not something I heard of until I started browsing ProtonDBs comments and saw a good amount of people using this as their gaming system. The website does look a bit shady, but the project is created by Thomas Crider a.k.a. GloriousEggroll. If you have ever used Proton-GE to get a game to work on Linux, Thomas person made that software. Nobara is also based on Fedora."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Drauger OS (",(0,i.jsx)(n.a,{href:"https://draugeros.org/",children:"https://draugeros.org/"}),') - Drauger is an Ubuntu-based gaming distribution. I couldn\'t find too much other info on their site, as the "Why use Drauger OS?" page was throwing a 404 (',(0,i.jsx)(n.a,{href:"https://draugeros.org/wiki/Why%20use%20Drauger%20OS",children:"https://draugeros.org/wiki/Why%20use%20Drauger%20OS"}),"?)."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Pop_OS! - I could just use a non-gaming OS and just install I need there as well."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"I ended up choosing Bazzite. It felt the most polished out-of-the-box OS. Now it was time to harden it a bit."}),"\n",(0,i.jsx)(n.h2,{id:"hardening",children:"Hardening"}),"\n",(0,i.jsxs)(n.p,{children:["I try to run scripts/playbooks in a Virtual Machine (VM) so that I don't mess up the main system I plan to work on. This was the case here as well. After downloading the ISO file from Bazzite, I ran the following (replace the ",(0,i.jsx)(n.code,{children:"bazziteISOhere"})," with your ISO file):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"virt-install --virt-type=kvm --name bazzite --vcpus=3 --memory=4096 --os-variant=fedora40 --cdrom=/var/lib/libvirt/images/bazziteISOhere.iso --network=default --disk size=60\n"})}),"\n",(0,i.jsx)(n.p,{children:"During the installation, I made sure to enable Full Disk Encryption."}),"\n",(0,i.jsxs)(n.p,{children:["After the installation was completed, the first thing I did on the system was enable SSH, so I can connect to the Bazzite VM from my PC. As OpenSSH-server was already installed on the system, turning it on was a simple ",(0,i.jsx)(n.code,{children:"systemctl start sshd.service"}),". I was then able to connect from my main machine to the Bazzite VM. I then built the following Bash script to harden the system a little bit:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n#\n# Harden Bazzite\n#\n# Licensed under CC BY 4.0 - Attribution 4.0 International\n# See more: https://creativecommons.org/licenses/by/4.0/\n\ncurrent_time=[$(date +\'%Y-%m-%dT%H:%M:%S%N%z\')]\nhostname="localhost"\n\nif [ "$EUID" -ne 0 ]\n  then echo "Please run as root"\n  exit\nfi\n\necho $current_time "Setting hostname to $hostname"\nhostnamectl set-hostname $hostname\n\necho $current_time "Updating Machine ID to Whonix ID"\necho "b08dfa6083e7567a1921a715000001fb" > /etc/machine-id\n\n#https://discussion.fedoraproject.org/t/changing-dns-server/94776/5\necho $current_time "Installing Mullvad Browser"\ncd ~/Downloads\nwget https://mullvad.net/en/download/browser/linux-x86_64/latest -O mullvad_browser.tar.xz\ntar xvf mullvad_browser.tar.xz\nrm mullvad_browser.tar.xz\ncd mullvad-browser/\n./start-mullvad-browser.desktop --register-app\n\n#https://privsec.dev/posts/linux/desktop-linux-hardening/#system-counting\necho $current_time "Adding double-check for countme variable"\necho "countme=false" >> /etc/dnf/dnf.conf\n\n#https://privsec.dev/posts/linux/desktop-linux-hardening/#storage-media-handling\necho $current_time "Stopping automount of storage media file systems"\ncat >> /etc/dconf/db/local.d/automount-disable<< EOF\n[org/gnome/desktop/media-handling]\nautomount=false\nautomount-open=false\nEOF\ncat >> /etc/dconf/db/local.d/locks/automount-disable<< EOF\norg/gnome/desktop/media-handling/automount\norg/gnome/desktop/media-handling/automount-open\nEOF\nsudo dconf update\n'})}),"\n",(0,i.jsx)(n.p,{children:"This only makes the following modifications:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Modifies the hostname to a generic hostname: ",(0,i.jsx)(n.code,{children:"localhost"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Modifies the Machine ID to be the Whonix Machine ID: ",(0,i.jsx)(n.code,{children:"b08dfa6083e7567a1921a715000001fb"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Downloads and Installs the Mullvad Browser and registers the app (so it is accessible on the app launcher)"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Adding ",(0,i.jsx)(n.code,{children:"countme=false"})," to a dnf configuration file as a precaution to prevent system counting from occurring"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Preventing automount of file systems so any USB device doesn't automatically mount"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Once you are done creating your script/playbook and have tested it, you can then run it on the main system."}),"\n",(0,i.jsxs)(n.p,{children:["I could have added more items from ",(0,i.jsx)(n.a,{href:"https://github.com/secureblue/secureblue",children:"GitHub - secureblue/secureblue: Hardened Fedora Atomic and Fedora CoreOS images"}),", but I felt like this was enough for now. I might reconsider this later, or even might work on an Ansible script then."]}),"\n",(0,i.jsxs)(n.p,{children:["If FDE is enabled, Bazzite has an option where you can enter the FDE password using an ujust command (",(0,i.jsx)(n.code,{children:"ujust setup-luks-tpm-unlock"}),") which prevents you from having to type your FDE password each time when booting the drive. ",(0,i.jsx)(n.strong,{children:"This is not recommended for AMD CPUs."})]}),"\n",(0,i.jsx)(n.h2,{id:"video-game-digital-distribution-platforms",children:"Video Game Digital Distribution Platforms"}),"\n",(0,i.jsxs)(n.p,{children:["I currently purchase games from 3 primary platforms: ",(0,i.jsx)(n.a,{href:"https://www.gog.com/en/",children:"GOG"}),", ",(0,i.jsx)(n.a,{href:"https://itch.io/",children:"Itch"}),", and ",(0,i.jsx)(n.a,{href:"https://store.steampowered.com/",children:"Steam"}),' (in this order). I prioritize platforms that provide offline installers (GOG and Itch). This allows me to fully "own" the game. "Own" is in quotes, as you pay for a license to the game, but you completely own the installation file. I use a 3-2-1 backup protocol for these installers so I can install and play the games whenever I want, even if the platform itself were to be unavailable.']}),"\n",(0,i.jsx)(n.h2,{id:"troubleshooting-links",children:"Troubleshooting Links"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.protondb.com/help/troubleshooting-faq",children:"https://www.protondb.com/help/troubleshooting-faq"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://www.protondb.com/help/improving-performance",children:"https://www.protondb.com/help/improving-performance"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/ValveSoftware/Proton/wiki/Proton-FAQ",children:"Proton FAQ \xb7 ValveSoftware/Proton Wiki \xb7 GitHub"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://steamcommunity.com/sharedfiles/filedetails/?id=2916600444",children:"Steam Community :: Guide :: Linux (Proton) guide"})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var o=t(6540);const i={},s=o.createContext(i);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);