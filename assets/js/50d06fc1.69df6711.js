"use strict";(self.webpackChunknew_blog=self.webpackChunknew_blog||[]).push([[2664],{9203:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"operations-security/cpu-backdoors","title":"CPU Backdoors","description":"Backdoors in Intel and AMD CPUs","source":"@site/docs/operations-security/cpu-backdoors.md","sourceDirName":"operations-security","slug":"/operations-security/cpu-backdoors","permalink":"/operations-security/cpu-backdoors","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"slug":"/operations-security/cpu-backdoors","description":"Backdoors in Intel and AMD CPUs"},"sidebar":"tutorialSidebar","previous":{"title":"Personal Attack Surface Management","permalink":"/operations-security/personal-attack-surface-management"},"next":{"title":"Open-Source Intelligence (OSINT)","permalink":"/category/open-source-intelligence-osint"}}');var o=n(4848),i=n(8453);const a={sidebar_position:5,slug:"/operations-security/cpu-backdoors",description:"Backdoors in Intel and AMD CPUs"},r="CPU Backdoors",l={},c=[{value:"Intel Management Engine (ME)",id:"intel-management-engine-me",level:2},{value:"AMD Platform Security Processor (PSP)",id:"amd-platform-security-processor-psp",level:2},{value:"Privacy Issues",id:"privacy-issues",level:2},{value:"Solutions",id:"solutions",level:2},{value:"Sources",id:"sources",level:2}];function h(e){const t={a:"a",blockquote:"blockquote",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"cpu-backdoors",children:"CPU Backdoors"})}),"\n",(0,o.jsx)(t.p,{children:"In my journey attempting to increase my operations security year-over-year, I constantly stumble across the topic of CPU backdoors, especially two products: Intel Management Engine (ME) and AMD Platform Security Processor (PSP). I wanted to have this post be a dive into these products specifically, describe why these are threats to your modern privacy connoisseur, and discuss solutions to fight against this type of threat. This is definitely a threat that would be part of a higher-level threat model. The initial sections dive into the basics of each technology, and then the later sections discuss privacy issues and solutions."}),"\n",(0,o.jsx)(t.h2,{id:"intel-management-engine-me",children:"Intel Management Engine (ME)"}),"\n",(0,o.jsx)(t.p,{children:"\"The Intel\xae Management Engine\xa0is an embedded microcontroller (integrated on some Intel chipsets) running a lightweight microkernel operating system that provides a variety of features and services for Intel\xae processor\u2013based computer systems\" [1]. This was introduced in Intel's chipsets from 2008 [5]. Basically, it is an independent system that runs on your CPU and offers services such as: Low-power out-of-band (OOB)\xa0management services, Capability Licensing Service (CLS), Anti-Theft Protection, Protected Audio Video Path (PAVP), etc [1]. In addition, the following points from Intel's page on ME (source #1) stood out to me:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:'"A fundamental feature of the Intel\xae Management Engine is that its power states are independent of the host OS power states."'}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:'"As a result, the Intel\xae Management Engine can be a fully functioning component as soon as power is applied to the system. This capability allows it to respond to OOB commands from the IT management console without having to wake up the rest of the system."'}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:'The aforementioned information summarizes the main product that Intel has sold the ME capability as: a way for organizations to remote control a device without having to wake the host operating system (OS) up, allowing for really minimal power consumption [2]. This, of course, allows the Management Engine to have "direct access to system memory, the screen, keyboard, and network" [2].'}),"\n",(0,o.jsx)(t.p,{children:"Intel ME is shipped with all modern day (post-2008) CPUs (listed towards the end of this section), but the Intel vPRO chips come with a product called Intel Active Management Technology (AMT). AMT leverages the ME capability to function and has two primary operational modes [3]:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Client Control Mode. Intel AMT enters this mode after performing a basic host-based (local) setup. It limits some of Intel AMT functionality, reflecting the lower level of trust required to complete a host-based setup."}),"\n",(0,o.jsx)(t.li,{children:"Admin Control Mode. After performing remote configuration, USB configuration, or a manual setup via Intel CSME, Intel AMT enters Admin Control Mode. In Admin Control Mode there are no limitations to Intel AMT functionality. This reflects the higher level of trust associated with these setup methods."}),"\n"]}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsx)(t.p,{children:"There is more information about the technical aspects of AMT in source #3 below, but I wanted to share what I felt like was enough for the discussion topic for this post."}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"Based on my research, it seems that AMT allows the organization to have way more capabilities over the systems in their purview in comparison to ME. Both allow for remote management of a device in one capacity or another. According to the EFF, Intel AMT can be disabled, while Intel ME cannot be."}),"\n",(0,o.jsxs)(t.p,{children:['The following information stood out to me as well with regard to the ME: "The ME has its own MAC and IP address for the out-of-band management interface, with direct access to the Ethernet controller; one portion of the Ethernet traffic is diverted to the ME even before reaching the host\'s operating system" [5]. In addition, the ME also can communicate with a Linux OS on the /dev/mei and/or /dev/mei0 device interfaces, allowing it to be much more involved [5]. With all this access, comes the vulnerability and exploitation of this access. Wikipedia has a list of vulnerabilities in Intel ME and AMT listed in a detailed manner: ',(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Intel_Management_Engine#Security_vulnerabilities",children:"Intel Management Engine - Wikipedia"}),'. These vulnerabilities allow threat actors to do the following and more with AMT access: "interact with the screen or console as if the user were doing so themselves, boot arbitrary OSes, install a new OS, and (with some work) steal disk encryption passwords" [2]. Of course, a threat actor would need to have capabilities to conduct this type of attack, preventing a script kiddie-level actor from exploiting this due to the technical knowledge about this tool and its vulnerabilities.']}),"\n",(0,o.jsx)(t.p,{children:"The following list of CPUs contain Intel ME [8]:"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"1st, 2nd, 3rd, 4th, 5th, 6th, 7th, and 8th generation Intel\xae Core\u2122 Processor Families"}),"\n",(0,o.jsx)(t.li,{children:"Intel\xae Xeon\xae Processor E3-1200 v5 and v6 Product Family"}),"\n",(0,o.jsx)(t.li,{children:"Intel\xae Xeon\xae Processor Scalable Family"}),"\n",(0,o.jsx)(t.li,{children:"Intel\xae Xeon\xae W Processor"}),"\n",(0,o.jsx)(t.li,{children:"Intel Atom\xae C3000 Processor Family"}),"\n",(0,o.jsx)(t.li,{children:"Apollo Lake Intel Atom\xae Processor E3900 series"}),"\n",(0,o.jsx)(t.li,{children:"Apollo Lake Intel\xae Pentium\xae Processors"}),"\n",(0,o.jsx)(t.li,{children:"Intel\xae Pentium\xae Processor G Series"}),"\n",(0,o.jsx)(t.li,{children:"Intel\xae Celeron\xae G, N, and J series Processors"}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"amd-platform-security-processor-psp",children:"AMD Platform Security Processor (PSP)"}),"\n",(0,o.jsx)(t.p,{children:'AMD Platform Security Processor (PSP), also known as AMD Secure Technology, is a secure subsystem incorporated in AMD CPUs since 2013 [6]. The goal of the subsystem was to be: "responsible for creating, monitoring and maintaining the security environment" by "managing the boot process, initializing various security related mechanisms, and monitoring the system for any suspicious activity or events and implementing an appropriate response" [6-7]. Compared to Intel\'s Management Engine, the PSP seems to be limited to only security related activities. However, the PSP has access to the same memory space that the user\'s applications run in, allowing it to potentially access that data should it choose to do so [6]. In addition, "The PSP is an integral part of the boot process, without which the x86 cores would never be activated" [6]. This proprietary software practically holds your own hardware hostage in the name of security. The PSP also has vulnerabilities as well, some allowing a nearly undetectable malware to be present at that low of a level, leading to a persistent backdoor for an attacker [9]. This can lead to ransomware scenarios and obtaining credentials from a running system.'}),"\n",(0,o.jsx)(t.h2,{id:"privacy-issues",children:"Privacy Issues"}),"\n",(0,o.jsxs)(t.p,{children:["The Free Software Foundation has a great write-up on the privacy aspect of Intel ME: ",(0,o.jsx)(t.a,{href:"https://www.fsf.org/blogs/sysadmin/the-management-engine-an-attack-on-computer-users-freedom",children:"The Intel Management Engine: an attack on computer users' freedom \u2014 Free Software Foundation \u2014 Working together for free software"}),". Regardless, I still wanted to provide my own reasoning for this. When we talk about security, open source does not necessitate a system being more secure than its closed source counterparts. However, when we talk about privacy, open source allows for a couple of user freedoms: allowing the users to know what the software is doing on their system and also allows the users to improve the security/privacy of the open source code by adding patches or updates to it. We really do not know precisely what the Intel ME or AMD PSP are doing on the system, other than from the word of the companies. We live in a world where everything is tracking you from your operating system, to your Internet Service Provider, to your Homeowners Associations (yep, them too - read online about Automatic License Plate Recognition (ALPRs) in small residential areas). The ME and PSP make your device ripe for this kind of exploitation. This is such a threat that even the National Security Agency (NSA) has asked to disable one of these products, Intel ME, from their systems: ",(0,o.jsx)(t.a,{href:"https://www.bleepingcomputer.com/news/hardware/researchers-find-a-way-to-disable-much-hated-intel-me-component-courtesy-of-the-nsa/",children:"Researchers Find a Way to Disable Much-Hated Intel ME Component Courtesy of the NSA"}),"."]}),"\n",(0,o.jsx)(t.h2,{id:"solutions",children:"Solutions"}),"\n",(0,o.jsxs)(t.p,{children:["From my research, it seems that Intel ME cannot be removed. However, it can be neutered/disabled. me_cleaner was a tool I came across that allows you to modify the firmware to make Intel ME only be active during the boot process. The me_cleaner tool has not been updated in 7 years but has coverage for a good number of old CPUs, which can be found here: ",(0,o.jsx)(t.a,{href:"https://github.com/corna/me_cleaner/wiki/me_cleaner-status",children:"me_cleaner status \xb7 corna/me_cleaner Wiki \xb7 GitHub"}),". The easiest method, seems to be to purchase a System76 Open Firmware system which has Intel ME disabled from the start [11]. System76 has a list of those supported devices here: ",(0,o.jsx)(t.a,{href:"https://support.system76.com/articles/open-firmware-systems/",children:"System76 Open Firmware Models - System76 Support"}),". There are other organizations such as Minifree (Libreboot), Tuxedo Computers, etc. that sell Intel ME disabled systems as well [12]. AMD PSP, on the other hand, is not a solution that can be disabled, as it is required to boot your system [13]. As stated previously, the PSP holds your cores until it verifies the security of the system. Although PSP does not seem to have a network stack (according to ",(0,o.jsx)(t.a,{href:"https://github.com/PSPReverse/PSPTool/issues/54",children:"Question, regarding psp, \xb7 Issue #54 \xb7 PSPReverse/PSPTool \xb7 GitHub"}),'), from a privacy standpoint, this is still a proprietary software on your system. My personal opinion would be to go through the System76 route (with Open Firmware) with Intel ME disabled. This allows you to disable the proprietary aspect of the system, and also prevents anything from having a "hold" on your CPU cores, allowing you not only privacy, but control over your own system.']}),"\n",(0,o.jsx)(t.h2,{id:"sources",children:"Sources"}),"\n",(0,o.jsxs)(t.ol,{children:["\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://www.intel.com/content/www/us/en/support/articles/000008927/software/chipset-software.html",children:"What is Intel\xae Management Engine?"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://www.eff.org/deeplinks/2017/05/intels-management-engine-security-hazard-and-users-need-way-disable-it",children:"Intel's Management Engine is a security hazard, and users need a way to disable it | Electronic Frontier Foundation"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://www.intel.com/content/www/us/en/developer/articles/guide/getting-started-with-active-management-technology.html",children:"Getting Started with Intel\xae Active Management Technology (Intel\xae AMT)"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://mjg59.dreamwidth.org/48429.html",title:"Intel's remote AMT vulnerablity",children:"Intel's remote AMT vulnerablity"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Intel_Management_Engine",children:"Intel Management Engine - Wikipedia"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/AMD_Platform_Security_Processor",children:"AMD Platform Security Processor - Wikipedia"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://web.archive.org/web/20211028164208/https://www.amd.com/system/files/TechDocs/52740_16h_Models_30h-3Fh_BKDG.pdf",children:"https://web.archive.org/web/20211028164208/https://www.amd.com/system/files/TechDocs/52740_16h_Models_30h-3Fh_BKDG.pdf"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://www.intel.com/content/www/us/en/support/articles/000025619/software.html",children:"Intel\xae Management Engine Critical Firmware Update (Intel-SA-00086)"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://arstechnica.com/information-technology/2018/03/a-raft-of-flaws-in-amd-chips-make-bad-hacks-much-much-worse/",children:"A raft of flaws in AMD chips makes bad hacks much, much worse - Ars Technica"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://github.com/corna/me_cleaner",children:"GitHub - corna/me_cleaner: Tool for partial deblobbing of Intel ME/TXE firmware images"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://support.system76.com/articles/intel-me/",children:"What is the Intel Management Engine? - System76 Support"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://en.wikipedia.org/wiki/Intel_Management_Engine#Commercial_ME_disablement",children:"Intel Management Engine - Wikipedia"})}),"\n"]}),"\n",(0,o.jsxs)(t.li,{children:["\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.a,{href:"https://forums.tomshardware.com/threads/amd-psp-disable.3753992/#post-22652634",children:"[SOLVED] - AMD PSP Disable | Tom's Hardware Forum"})}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var s=n(6540);const o={},i=s.createContext(o);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);